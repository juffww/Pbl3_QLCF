<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AromaCafé - Đặt Món</title>
    <link rel="stylesheet" type="text/css" href="~/css/Staff/Dashboard.css" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        :root {
            --primary-color: #8b5a2b;
            --primary-dark: #5d3a1f;
            --primary-light: #e6d7c3;
            --accent-color: #4caf50;
            --accent-dark: #45a049;
            --bg-color: #f9f5ee;
            --text-color: #333;
            --border-radius: 8px;
            --card-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        body {
            background-color: var(--bg-color);
            color: var(--text-color);
        }

        /* Header */
        .header {
            display: flex;
            align-items: center;
            padding: 15px 20px;
            background-color: white;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .top-menu-item {
              color: black !important;
          }

        .top-menu-item:hover, .top-menu-item.active {
            background-color: #8b5a2b !important;
            color: white !important;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .logo-circle {
            width: 45px;
            height: 45px;
            background-color: var(--primary-color);
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 18px;
        }

        .brand-name {
            font-weight: bold;
            color: var(--primary-color);
            font-size: 18px;
        }

        .nav {
            display: flex;
            margin-left: 30px;
            gap: 20px;
        }

        .nav-item {
            padding: 10px 18px;
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 500;
            border-radius: var(--border-radius);
            transition: all 0.2s ease;
        }

        .nav-item:hover {
            background-color: var(--primary-light);
        }

        .nav-item.active {
            background-color: var(--primary-color);
            color: white;
        }

        .search-container {
            margin-left: auto;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .search-input {
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 20px;
            width: 220px;
            transition: box-shadow 0.2s;
        }

        .search-input:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(139, 90, 43, 0.2);
        }

        .help-icon {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            background-color: var(--primary-light);
            color: var(--primary-color);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            cursor: pointer;
        }

        /* Main Container */
        .main-container {
            display: flex;
            height: calc(100vh - 75px);
        }

        /* Menu Section */
        .menu-section {
            flex: 3;
            padding: 25px;
            overflow-y: auto;
        }

        .section-title {
            color: var(--primary-dark);
            margin-bottom: 20px;
            font-size: 1.6rem;
            font-weight: 600;
        }

        .search-products {
            display: flex;
            margin-bottom: 25px;
        }

        .search-products input {
            flex: 1;
            padding: 12px 18px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius) 0 0 var(--border-radius);
            outline: none;
            font-size: 15px;
        }

        .search-products button {
            padding: 12px 25px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: 0 var(--border-radius) var(--border-radius) 0;
            cursor: pointer;
            font-weight: 500;
            transition: background-color 0.2s;
        }

        .search-products button:hover {
            background-color: var(--primary-dark);
        }

        .category-tabs {
            display: flex;
            overflow-x: auto;
            margin-bottom: 25px;
            padding-bottom: 15px;
            scrollbar-width: thin;
        }

        .category-tabs::-webkit-scrollbar {
            height: 6px;
        }

        .category-tabs::-webkit-scrollbar-thumb {
            background-color: var(--primary-light);
            border-radius: 10px;
        }

        .category-tab {
            padding: 10px 22px;
            background-color: var(--primary-light);
            color: var(--primary-dark);
            border-radius: var(--border-radius);
            margin-right: 15px;
            cursor: pointer;
            white-space: nowrap;
            transition: all 0.2s;
            font-weight: 500;
            text-decoration: none;
        }

        .category-tab:hover {
            background-color: #d9c7ae;
        }

        .category-tab.active {
            background-color: var(--primary-color);
            color: white;
        }

        .category-title {
            color: var(--primary-dark);
            margin: 30px 0 20px 0;
            font-size: 1.4rem;
            padding-bottom: 12px;
            border-bottom: 2px solid var(--primary-light);
            display: flex;
            align-items: center;
        }

        .category-title::before {
            content: "";
            display: inline-block;
            width: 10px;
            height: 20px;
            background-color: var(--primary-color);
            margin-right: 10px;
            border-radius: 2px;
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
            gap: 25px;
            margin-bottom: 35px;
        }

        .product-card {
            background-color: white;
            border-radius: var(--border-radius);
            overflow: hidden;
            box-shadow: var(--card-shadow);
            transition: transform 0.3s, box-shadow 0.3s;
            cursor: pointer;
            position: relative;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        }

        .product-image {
            width: 100%;
            height: 160px;
            object-fit: cover;
        }

        .product-details {
            padding: 18px;
        }

        .product-name {
            font-weight: 600;
            color: var(--primary-dark);
            margin-bottom: 8px;
            font-size: 16px;
        }

        .product-price {
            color: var(--primary-color);
            font-weight: 600;
            margin-bottom: 15px;
            font-size: 17px;
        }

        .product-add {
            width: 100%;
            padding: 10px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 500;
            transition: background-color 0.2s;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .product-add::before {
            content: "+";
            font-size: 18px;
            font-weight: bold;
        }

        .product-add:hover {
            background-color: var(--primary-dark);
        }

        /* Cart Section */
        .cart-section {
            flex: 1;
            min-width: 380px;
            /* background-color: white;
            box-shadow: -3px 0 15px rgba(0, 0, 0, 0.08); */
            padding: 25px;
            display: flex;
            flex-direction: column;
        }

        .cart-title {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
        }

        .order-number {
            color: var(--primary-color);
            font-weight: 600;
            padding: 5px 12px;
            background-color: var(--primary-light);
            border-radius: 20px;
        }

        .cart-items {
            flex: 1;
            /* overflow-y: auto; */
            margin-bottom: 20px;
        }

        .cart-item {
            display: flex;
            padding: 18px 0;
            border-bottom: 1px solid #f1f1f1;
            animation: fadeIn 0.3s ease;
        }

        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .cart-item-info {
            flex: 1;
        }

        .cart-item-name {
            font-weight: 500;
            color: var(--primary-dark);
            margin-bottom: 6px;
            font-size: 16px;
        }

        .cart-item-price {
            color: var(--primary-color);
            font-weight: 500;
            margin-bottom: 8px;
        }

        .cart-item-note {
            font-size: 0.85rem;
            color: #777;
            margin-top: 5px;
            font-style: italic;
            background-color: #f9f9f9;
            padding: 6px 10px;
            border-radius: 4px;
            border-left: 3px solid var(--primary-light);
        }

        .add-note-btn {
            color: var(--primary-color);
            font-size: 0.9rem;
            background: none;
            border: none;
            cursor: pointer;
            text-decoration: underline;
            padding: 0;
            margin-top: 8px;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .add-note-btn::before {
            content: "✎";
            font-size: 14px;
        }

        .cart-item-actions {
            display: flex;
            align-items: flex-start;
            gap: 15px;
            padding-top: 5px;
        }

        .quantity-control {
            display: flex;
            align-items: center;
            gap: 10px;
            background-color: #f5f5f5;
            border-radius: 20px;
            padding: 5px;
        }

        .quantity-btn {
            width: 25px;
            height: 25px;
            border-radius: 50%;
            border: none;
            background-color: white;
            color: var(--primary-dark);
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .quantity-btn:hover {
            background-color: var(--primary-light);
        }

        .quantity-display {
            font-weight: 500;
            color: var(--primary-dark);
            min-width: 20px;
            text-align: center;
        }

        .delete-btn {
            color: #ff5252;
            cursor: pointer;
            width: 28px;
            height: 28px;
            border-radius: 50%;
            background-color: #fff0f0;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
            transition: all 0.2s;
        }

        .delete-btn:hover {
            background-color: #ffe0e0;
        }

        .cart-summary {
            background-color: #f9f9f9;
            border-radius: var(--border-radius);
            padding: 15px;
            margin-bottom: 20px;
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
        }

        .summary-row.total {
            font-weight: 600;
            color: var(--primary-dark);
            font-size: 1.1rem;
            margin-top: 10px;
            padding-top: 15px;
            border-top: 1px dashed #ddd;
        }

        .order-options {
            margin-top: 15px;
        }

        .option-group {
            margin-bottom: 18px;
        }

        .option-label {
            display: block;
            margin-bottom: 8px;
            color: var(--primary-dark);
            font-weight: 500;
        }

        .option-input {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
            transition: border-color 0.2s, box-shadow 0.2s;
        }

        .option-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 2px rgba(139, 90, 43, 0.1);
        }

        .option-select {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
            background-color: white;
            color: var(--primary-dark);
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 12 12'%3E%3Cpath fill='%238b5a2b' d='M6 9L1 4h10z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 15px center;
        }

        .checkout-btn {
            width: 100%;
            padding: 14px;
            background-color: var(--accent-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            font-weight: 600;
            font-size: 1rem;
            cursor: pointer;
            margin-top: 20px;
            transition: background-color 0.2s;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }

        .checkout-btn::before {
            content: "✓";
            font-weight: bold;
        }

        .checkout-btn:hover {
            background-color: var(--accent-dark);
        }

        .clear-cart-btn {
            width: 100%;
            padding: 12px;
            background-color: #f5f5f5;
            color: #666;
            border: none;
            border-radius: var(--border-radius);
            margin-top: 12px;
            cursor: pointer;
            font-weight: 500;
            transition: background-color 0.2s;
        }

        .clear-cart-btn:hover {
            background-color: #e0e0e0;
        }

        /* Empty cart state */
        .empty-cart {
            text-align: center;
            padding: 40px 0;
            color: #999;
        }

        .empty-cart-icon {
            font-size: 50px;
            margin-bottom: 15px;
            color: #ddd;
        }

        /* Scrollbar styling */
        .menu-section::-webkit-scrollbar, .cart-items::-webkit-scrollbar {
            width: 6px;
        }

        .menu-section::-webkit-scrollbar-thumb, .cart-items::-webkit-scrollbar-thumb {
            background-color: var(--primary-light);
            border-radius: 10px;
        }

        /* Product badge */
        .product-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: var(--accent-color);
            color: white;
            padding: 5px 10px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 500;
        }

        .alert {
            padding: 15px;
            margin-bottom: 20px;
            border: 1px solid transparent;
            border-radius: 4px;
        }

        .alert-success {
            color: #3c763d;
            background-color: #dff0d8;
            border-color: #d6e9c6;
        }
    </style>
</head>
@using pbl3_QLCF.ViewModels;
@model SanPhamViewModel
@{
    ViewData["Title"] = "Sản phẩm";
}
<body>
    @{
        Html.RenderPartial("~/Views/Staff/sharedAll.cshtml");
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }
    <div class="main-container">
        <div class="menu-section">
            <h1 class="section-title">Danh mục sản phẩm</h1>

            @using (Html.BeginForm("TimKiem", "Staff", FormMethod.Post))
            {
                <div class="search-products">
                    <input type="text" name="search" placeholder="Tìm kiếm sản phẩm..." value="@Model.SearchString">
                    <button type="submit">Tìm kiếm</button>
                </div>
            }

            <div class="category-tabs">
                <a href="@Url.Action("SanPham", "Staff", new { search = Model.SearchString })" 
                class="category-tab @(TempData["SelectedCategory"] == null ? "active" : "")">Tất cả</a>
                @foreach (var type in Model.ProductTypes)
                {
                    <a href="@Url.Action("SanPham", "Staff", new { loaiSanPham = type, search = Model.SearchString })" 
                    class="category-tab @(TempData["SelectedCategory"]?.ToString() == type ? "active" : "")">
                        @type
                    </a>
                }
            </div>

            @if (TempData["SelectedCategory"] != null)
            {
                <h2 class="category-title">@TempData["SelectedCategory"]</h2>
            }
            else
            {
                <h2 class="category-title">Tất cả sản phẩm</h2>
            }

        <div class="products-grid">
                @foreach (var item in Model.ThucDons)
                {
                    <div class="product-card">
                        <img src="@(string.IsNullOrEmpty(item.HinhAnh) ? "/images/default.jpg" : item.HinhAnh)" alt="@item.TenMon" class="product-image">
                        @if (item.TinhTrang == true)
                        {
                            <div class="product-badge">Đang bán</div>
                        }
                        else
                        {
                            <div class="product-badge">Ngừng bán</div>
                        }
                        <div class="product-details">
                            <div class="product-name">@item.TenMon</div>
                            <div class="product-price">@item.GiaSp.ToString("#,##0").Replace(",", ".") VND</div>
                        @using (Html.BeginForm("ThemVaoDonHang", "Staff", FormMethod.Post, new { id = "addToOrderForm", onsubmit = "return addToOrder(this);" }))
                        {
                            <input type="hidden" name="maMon" value="@item.MaMon" />
                            <input type="hidden" name="soLuong" value="1" />
                            <button type="submit" class="product-add" @(item.TinhTrang == true ? "" : "disabled")>Thêm vào đơn</button>
                        }
                        </div>
                    </div>
                }
        </div>
    </div>

    <div class="cart-section">
        <div class="cart-title">
            <h2 class="section-title">Đơn hàng mới</h2>
            <span class="order-number">#@Model.DonHangHienTai.MaDh</span>
        </div>

        <div class="cart-items">
                @if (Model.DonHangHienTai?.ChiTietDonHangs == null || !Model.DonHangHienTai.ChiTietDonHangs.Any())
                {
                    <div class="empty-cart">
                        <div class="empty-cart-icon">🛒</div>
                        <p>Chưa có sản phẩm nào trong đơn hàng</p>
                        <p style="margin-top: 10px; font-size: 0.9em;">Vui lòng chọn sản phẩm từ menu bên trái</p>
                    </div>
                }
                else
                {
                    foreach (var item in Model.DonHangHienTai.ChiTietDonHangs)
                    {
                        var thucDon = Model.Cart.FirstOrDefault(t => t.MaMon == item.MaMon);
                        if (thucDon != null)
                        {
                            <div class="cart-item">
                                <div class="cart-item-info">
                                    <div class="cart-item-name">@thucDon.TenMon</div>
                                    <div class="cart-item-price">@thucDon.GiaSp.ToString("#,##0") VND x @item.SoLuong</div>
                                    @if (!string.IsNullOrEmpty(item.GhiChu))
                                    {
                                        <div class="cart-item-note">@item.GhiChu</div>
                                    }
                                    @using (Html.BeginForm("ThemGhiChu", "Staff", FormMethod.Post))
                                    {
                                        <input type="hidden" name="maMon" value="@item.MaMon" />
                                        <input type="text" name="ghiChu" placeholder="Nhập ghi chú" value="@item.GhiChu" />
                                        <button type="submit" class="add-note-btn">Cập nhật ghi chú</button>
                                    }
                                </div>
                                <div class="cart-item-actions">
                                    <div class="quantity-control">
                                        @using (Html.BeginForm("CapNhatSoLuong", "Staff", FormMethod.Post))
                                        {
                                            <input type="hidden" name="maMon" value="@item.MaMon" />
                                            <input type="hidden" name="soLuong" value="@(item.SoLuong - 1)" />
                                            <button type="submit" class="quantity-btn">-</button>
                                        }
                                        <span class="quantity-display">@item.SoLuong</span>
                                        @using (Html.BeginForm("CapNhatSoLuong", "Staff", FormMethod.Post))
                                        {
                                            <input type="hidden" name="maMon" value="@item.MaMon" />
                                            <input type="hidden" name="soLuong" value="@(item.SoLuong + 1)" />
                                            <button type="submit" class="quantity-btn">+</button>
                                        }
                                    </div>
                                    @using (Html.BeginForm("XoaSanPham", "Staff", FormMethod.Post))
                                    {
                                        <input type="hidden" name="maMon" value="@item.MaMon" />
                                        <button type="submit" class="delete-btn">×</button>
                                    }
                                    </div>
                            </div>
                        }
                    }
                }
                @if (Model.DonHangHienTai != null)
                {
                    <div style="display:none;">
                        Order ID: @Model.DonHangHienTai.MaDh<br/>
                        Items Count: @(Model.DonHangHienTai.ChiTietDonHangs?.Count ?? 0)
                    </div>
                }

                @{
                    double tamTinh = Model.DonHangHienTai.TongTien ?? 0;
                    double tongCong = tamTinh;
                }
        </div>

        <div class="cart-summary">
            <div class="summary-row">
                <div>Tạm tính:</div>
                <div>@tamTinh.ToString("#,##0") VND</div>
            </div>
            <div class="summary-row total">
                <div>Tổng cộng:</div>
                <div>@tongCong.ToString("#,##0") VND</div>
            </div>
        </div>

        @using (Html.BeginForm("HoanTatDonHang", "Staff", FormMethod.Post))
        {
            <div class="order-options">
                <div class="option-group">
                    <label class="option-label">Tên khách hàng</label>
                    <input type="text" name="tenKhachHang" placeholder="Nhập tên khách hàng" class="option-input">
                </div>
                <div class="option-group">
                    <label class="option-label">Số điện thoại</label>
                    <input type="text" name="soDienThoai" placeholder="Nhập số điện thoại" class="option-input" required>
                </div>
                <div class="option-group">
                    <label class="option-label">Bàn số</label>
                    <input type="text" name="ban" placeholder="Nhập số bàn" class="option-input">
                </div>
                <div class="option-group">
                    <label class="option-label">Ghi chú đơn hàng</label>
                    <textarea name="ghiChuDonHang" class="option-input" placeholder="Thêm ghi chú cho đơn hàng" style="height: 80px;"></textarea>
                </div>
            </div>

            <button type="submit" class="checkout-btn" @(Model.DonHangHienTai.ChiTietDonHangs.Any() ? "" : "disabled")>Hoàn tất đơn hàng</button>
        }

        @using (Html.BeginForm("XoaDonHang", "Staff", FormMethod.Post))
        {
                <button type="submit" class="clear-cart-btn" @(Model.DonHangHienTai.ChiTietDonHangs.Any() ? "" : "disabled")>Xóa đơn hàng</button>
        }
    </div>
</div>
<script>
function addToOrder(form) {
    var formData = new FormData(form);

    fetch(form.action, {
        method: 'POST',
        body: formData
    })
    .then(response => response.text())
    .then(html => {
        // Cập nhật phần đơn hàng từ response
        document.querySelector('.cart-section').innerHTML = 
            new DOMParser().parseFromString(html, 'text/html')
            .querySelector('.cart-section').innerHTML;
    });

    return false; // Ngăn form submit thông thường
}
</script>
</body>
</html>