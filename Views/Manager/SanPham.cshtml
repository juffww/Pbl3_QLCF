@using pbl3_QLCF.Data
@{
    Layout = null;
}
@model IEnumerable<ThucDon>
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AromaCafé - Quản lý Sản Phẩm</title>
    <link rel="stylesheet" type="text/css" href="~/css/Manager/magDashboard.css" />
    <style>
        :root {
            --primary-color: #8B6D5A;
            --secondary-color: #D2B48C;
            --light-color: #F5F5DC;
            --dark-color: #5D4037;
            --success-color: #4CAF50;
            --danger-color: #F44336;
            --warning-color: #FF9800;
        }

        * {
            margin: 0;
            p
            ing: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--light-color);
        }

        .page-header {
            display: flex;
            align-items: center;
            gap: 500px; 
        }

        .header {
            background-color: white;
            padding: 10px 20px;
            display: flex;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .logo-container {
            display: flex;
            align-items: center;
            margin-right: 20px;
            flex-shrink: 0;
        }

        .logo {
            width: 50px;
            height: 50px;
            background-color: #6F4E37; 
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            margin-right: 10px;
        }

        .brand-name {
            font-size: 18px;
            font-weight: normal;
            color: #6F4E37;
        }

        .nav {
            display: flex;
            flex-grow: 1;
        }

        .nav-item {
            padding: 10px 20px;
            text-decoration: none;
            color: #333;
            font-weight: normal;
        }

        .nav-item.active {
            background-color: var(--primary-color);
            color: white;
        }

        .user-section {
            display: flex;
            align-items: center;
        }

        .notification {
            margin-right: 20px;
            font-size: 20px;
        }

        .user {
            display: flex;
            align-items: center;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            background-color: var(--dark-color);
            border-radius: 50%;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-right: 10px;
        }

        .container {
            padding: 20px;
        }

        .page-title {
            font-size: 28px;
            margin-bottom: 20px;
            color: var(--dark-color);
            font-weight: bold;
        }

        .action-bar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
            margin-bottom: 15px;
            gap: 15px; 
        }

        .search-bar {
            display: flex;
            align-items: center;
            flex-grow: 1; 
            max-width: 1000px; 
            background: none !important;
            border: none !important;
        }

        .search-input {
            flex-grow: 1;
            border: 1px solid #ccc;
            padding: 13px 20px;
            outline: none;
            border-radius: 4px 0 0 4px;
            min-width: 300px; 
        }

        #search-btn {
            border-radius: 0 4px 4px 0;
            margin-left: 0;
            padding: 13px 20px; 
            white-space: nowrap;
        }

        .buttons {
            display: flex;
            flex-shrink: 0;
        }

        .btn {
          padding: 8px 16px;
          border: none;
          border-radius: 4px;
          cursor: pointer;
          font-weight: 500;
        }

        

        #add-product-btn {
          white-space: nowrap;
          padding: 0.8rem 1.5rem !important;
          text-decoration: none;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: white;
            text-decoration: none;
        }

        .edit-product, .delete-product
        {
            padding: 8px 30px
            text-decoration: none !important;
        }
        .btn-success {
            background-color: var(--success-color);
            color: white;
        }

        .category-filter {
            display: flex;
            margin-bottom: 20px;
            background-color: white;
            border-radius: 4px;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

        .category-item {
            padding: 10px 20px;
            cursor: pointer;
            text-decoration: none;
            color: black; 
        }

        .category-item.active {
            background-color: var(--primary-color);
            color: white;
        }
        .category-item:link,
        .category-item:visited,
        .category-item:hover,
        .category-item:active,
        .category-item:focus {
            text-decoration: none;
            outline: none;
        }
       
        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
        }

        .product-card {
            background-color: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .product-image {
            height: 180px;
            background-color: #f0f0f0;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #888;
            overflow: hidden;
        }
        .product-image img {
            max-width: 100%;            
            max-height: 100%;        
            object-fit: cover;          
        }
        .product-details {
            padding: 15px;
        }

        .product-name {
            font-size: 18px;
            font-weight: 500;
            margin-bottom: 5px;
        }

        .product-price {
            font-size: 16px;
            color: var(--primary-color);
            font-weight: bold;
            margin-bottom: 10px;
        }

        .product-info {
            display: flex;
            justify-content: space-between;
            color: #666;
            font-size: 14px;
            margin-bottom: 10px;
        }

        .product-actions {
            display: flex;
            justify-content: space-between;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 500;
        }

        .status-active {
            background-color: #E8F5E9;
            color: var(--success-color);
        }

        .status-inactive {
            background-color: #FFEBEE;
            color: var(--danger-color);
        }

        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 30px;
            gap: 5px;
        }

        .pagination a {
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 4px;
            text-decoration: none;
            color: var(--dark-color);
        }

        .pagination a.active {
            background-color: var(--primary-color);
            color: white;
        }

        .pagination a:hover:not(.active) {
            background-color: #f0f0f0;
        }

        .page-item {
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 5px;
            border-radius: 4px;
            cursor: pointer;
        }

        .page-item.active {
            background-color: var(--primary-color);
            color: white;
        }

        .modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0,0,0,0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .modal-content {
            background-color: white;
            width: 500px;
            border-radius: 8px;
            overflow: hidden;
            overflow-y: auto; 
        }

        .modal-header {
            background-color: var(--primary-color);
            color: white;
            padding: 10px 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-title {
            font-size: 18px;
            font-weight: 500;
        }

        .modal-close {
            cursor: pointer;
            font-size: 20px;
        }

        .modal-body {
            padding: 20px; /* Reduced padding */
        }

        .form-group {
            margin-bottom: 15px; /* Reduced margin */
        }

        .form-label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }

        .form-input {
            width: 100%;
            padding: 6px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .form-select {
            width: 100%;
            padding: 6px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .modal-footer {
            padding: 10px 15px;
            display: flex;
            justify-content: flex-end;
            border-top: 1px solid #eee;
        }
        .alert {
            padding: 15px;
            margin-bottom: 20px;
            border: 1px solid transparent;
            border-radius: 4px;
        }

        .alert-success {
            color: #3c763d;
            background-color: #dff0d8;
            border-color: #d6e9c6;
        }
    </style>
</head>
<body>
    @{
        Html.RenderPartial("~/Views/Manager/sharedAll.cshtml");
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="page-header">
            <h1 class="page-title">Quản lý Sản Phẩm</h1>
        </div>

        <!-- Phần tìm kiếm và lọc -->
        <div class="action-bar">
            <form method="get" action="@Url.Action("SanPham")" class="search-bar">
                <input type="text" name="search" class="search-input" placeholder="Tìm kiếm sản phẩm..." 
                       value="@ViewBag.SearchString">
                <input type="hidden" name="category" value="@ViewBag.CurrentCategory">
                <input type="hidden" name="page" value="1">
                <button type="submit" class="btn btn-primary" id="search-btn">Tìm</button>
            </form>
            <div class="buttons">
                <a href="@Url.Action("ThemSanPham", "Manager")" class="btn btn-success"id="add-product-btn">+ Thêm Sản Phẩm</a>
            </div>
        </div>

        <!-- Danh mục -->
        <div class="category-filter">
            <a class="category-item @(ViewBag.CurrentCategory == "all" ? "active" : "")" 
               href="@Url.Action("SanPham", new { category = "all", search = ViewBag.SearchString, page = 1 })">Tất cả</a>
            <a class="category-item @(ViewBag.CurrentCategory == "Cà phê" ? "active" : "")" 
               href="@Url.Action("SanPham", new { category = "Cà phê", search = ViewBag.SearchString, page = 1 })">Cà phê</a>
            <a class="category-item @(ViewBag.CurrentCategory == "Trà" ? "active" : "")" 
               href="@Url.Action("SanPham", new { category = "Trà", search = ViewBag.SearchString, page = 1 })">Trà & Đồ uống khác</a>
            <a class="category-item @(ViewBag.CurrentCategory == "Đồ uống đá xay" ? "active" : "")" 
               href="@Url.Action("SanPham", new { category = "Đồ uống đá xay", search = ViewBag.SearchString, page = 1 })">Đồ uống đá xay</a>
            <a class="category-item @(ViewBag.CurrentCategory == "Bánh ngọt" ? "active" : "")" 
               href="@Url.Action("SanPham", new { category = "Bánh ngọt", search = ViewBag.SearchString, page = 1 })">Bánh ngọt</a>
            <a class="category-item @(ViewBag.CurrentCategory == "Đồ ăn nhẹ" ? "active" : "")" 
               href="@Url.Action("SanPham", new { category = "Đồ ăn nhẹ", search = ViewBag.SearchString, page = 1 })">Đồ ăn nhẹ</a>
        </div>
    
        <!-- Product List -->
        <div class="products-grid">
            @foreach (var product in Model)
            {
                <div class="product-card">
                    <div class="product-image">
                        <img src="@(product.HinhAnh ?? "default.jpg")" alt="@product.TenMon">
                    </div>
                    <div class="product-details">
                        <div class="product-name">@product.TenMon</div>
                            <div class="product-price">@product.GiaSp.ToString("N0").Replace(",", ".") VNĐ</div>
                        <div class="product-info">
                            <span>@product.TenLoai</span>
                            <span class="status-badge @(product.TinhTrang == true ? "status-active" : "status-inactive")">
                                @(product.TinhTrang == true ? "Đang bán" : "Ngừng bán")
                            </span>
                        </div>
                        <div class="product-actions"> 
                            <a href="@Url.Action("EditProduct", "Manager", new { id = product.MaMon })" class="btn btn-primary edit-product">Chỉnh sửa</a>
                            <form method="post" action="@Url.Action("DeleteProduct", "Manager")" style="display: inline-block;"
                                    onsubmit="return confirm('Bạn có chắc chắn muốn xóa sản phẩm này không?');">
                                                    @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@product.MaMon" />
                                <button type="submit" class="btn btn-danger">Xóa</button>
                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Phân trang -->
        <div class="pagination">
            @{
                int currentPage = ViewBag.CurrentPage;
                int totalPages = ViewBag.TotalPages;

                //Hiển thị nút trang đầu cùng [<<]
                if(currentPage > 1)
                {
                    <a href="@Url.Action("SanPham", new { page = 1, category = ViewBag.CurrentCategory, search = ViewBag.SearchString})">
                        &lt;&lt
                    </a>
                }
                // Hiển thị nút trang trước [<]
                if (currentPage > 1)
                {
                    <a href="@Url.Action("SanPham", new { page = currentPage - 1, category = ViewBag.CurrentCategory, search = ViewBag.SearchString })">
                        &lt;
                    </a>
                }

                // Hiển thị các trang gần đó
                // int startPage = Math.Max(1, currentPage - 1);
                // int endPage = Math.Min(totalPages, currentPage + 1);
                // for (int i = startPage; i <= endPage; i++)
                // {
                //     <a class="@(i == currentPage ? "active" : "")" 
                //        href="@Url.Action("SanPham", new { page = i, category = ViewBag.CurrentCategory, search = ViewBag.SearchString })">
                //         @i
                //     </a>
                // }

                // Hiển thị các trang gần đó (5 trang)
                int startPage = Math.Max(1, currentPage - 2); // Show 2 pages before current
                int endPage = Math.Min(totalPages, currentPage + 2); // Show 2 pages after current

                // Điều chỉnh để luôn hiển thị 5 trang nếu có thể
                if (endPage - startPage + 1 < 5 && totalPages >= 5)
                {
                    if (currentPage <= 3)
                    {
                        // Nếu đang ở gần đầu, hiển thị 5 trang đầu
                        endPage = Math.Min(5, totalPages);
                        startPage = 1;
                    }
                    else
                    {
                        // Nếu đang ở gần cuối, hiển thị 5 trang cuối
                        startPage = Math.Max(1, totalPages - 4);
                        endPage = totalPages;
                    }
                }
                for (int i = startPage; i <= endPage; i++)
                {
                    <a class="@(i == currentPage ? "active" : "")" 
                       href="@Url.Action("SanPham", new { page = i, category = ViewBag.CurrentCategory, search = ViewBag.SearchString })">
                        @i
                    </a>
                }

                // Hiển thị nút trang sau [>]
                if (currentPage < totalPages)
                {
                    <a href="@Url.Action("SanPham", new { page = currentPage + 1, category = ViewBag.CurrentCategory, search = ViewBag.SearchString })">
                        &gt;
                    </a>
                }
                //Hiển thị nút trang đầu cùng [>>]
                if (currentPage < totalPages)
                {
                    <a href="@Url.Action("SanPham", new { page = totalPages, category = ViewBag.CurrentCategory, search = ViewBag.SearchString})">
                        &gt;&gt;
                    </a>
                }
                
            }
        </div>
    </div>
</body>
</html>