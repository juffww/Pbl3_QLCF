@using pbl3_QLCF.Data
@{
    Layout = null;
}
@model IEnumerable<ThucDon>
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AromaCafé - Quản lý Sản Phẩm</title>
    <link rel="stylesheet" type="text/css" href="~/css/Manager/magDashboard.css" />
    <style>
        :root {
            --primary-color: #8B6D5A;
            --secondary-color: #D2B48C;
            --light-color: #F5F5DC;
            --dark-color: #5D4037;
            --success-color: #4CAF50;
            --danger-color: #F44336;
            --warning-color: #FF9800;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--light-color);
        }

        .page-header {
            display: flex;
            align-items: center;
            gap: 770px; /* Khoảng cách giữa tiêu đề và nút */
        }

        .header {
            background-color: white;
            padding: 10px 20px;
            display: flex;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .logo-container {
            display: flex;
            align-items: center;
            margin-right: 20px;
            flex-shrink: 0;
        }

        .logo {
            width: 50px;
            height: 50px;
            background-color: #6F4E37; /* Coffee brown */
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            margin-right: 10px;
        }

        .brand-name {
            font-size: 18px;
            font-weight: bold;
            color: #6F4E37; /* Coffee brown */
        }

        .nav {
            display: flex;
            flex-grow: 1;
        }

        .nav-item {
            padding: 10px 20px;
            text-decoration: none;
            color: #333;
            font-weight: 500;
        }

        .nav-item.active {
            background-color: var(--primary-color);
            color: white;
        }

        .user-section {
            display: flex;
            align-items: center;
        }

        .notification {
            margin-right: 20px;
            font-size: 20px;
        }

        .user {
            display: flex;
            align-items: center;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            background-color: var(--dark-color);
            border-radius: 50%;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-right: 10px;
        }

        .container {
            padding: 20px;
        }

        .page-title {
            font-size: 28px;
            margin-bottom: 20px;
            color: var(--dark-color);
        }

        .action-bar {
          display: flex;
          justify-content: space-between;
          align-items: center;
          width: 100%;
          margin-bottom: 15px;
          padding: 0 15px;
        }

        .search-bar {
          display: flex;
          align-items: center;
          background-color: transparent;
          border-radius: 4px;
          padding: 5px 0;
          border: none !important;
          background: none !important;
          flex-grow: 1;
          max-width: 100%;
        }

        .search-input {
          flex-grow: 1;
          border: 1px solid #ccc;
          padding: 13px;
          outline: none;
          border-radius: 4px 0 0 4px;
          width: 100%;
          min-width: 300px;
        }

        .buttons {
          display: flex;
          margin-left: 15px;
        }

        .btn {
          padding: 8px 16px;
          border: none;
          border-radius: 4px;
          cursor: pointer;
          font-weight: 500;
        }

        #search-btn {
          border-radius: 0 4px 4px 0;
          margin-left: 0;
          padding: 13px;
        }

        #add-product-btn {
          white-space: nowrap;
          padding: 0.8rem 1.5rem !important;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: white;
        }

        .edit-product, .delete-product
        {
            padding: 8px 30px
        }
        .btn-success {
            background-color: var(--success-color);
            color: white;
        }

        .category-filter {
            display: flex;
            margin-bottom: 20px;
            background-color: white;
            border-radius: 4px;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

        .category-item {
            padding: 10px 20px;
            cursor: pointer;
        }

        .category-item.active {
            background-color: var(--primary-color);
            color: white;
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
        }

        .product-card {
            background-color: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .product-image {
            height: 180px;
            background-color: #f0f0f0;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #888;
            overflow: hidden;
        }
        .product-image img {
            max-width: 100%;             /* Scale image to fit horizontally */
            max-height: 100%;            /* Scale image to fit vertically */
            object-fit: cover;           /* Ensure the image covers the space without distortion */
        }
        .product-details {
            padding: 15px;
        }

        .product-name {
            font-size: 18px;
            font-weight: 500;
            margin-bottom: 5px;
        }

        .product-price {
            font-size: 16px;
            color: var(--primary-color);
            font-weight: bold;
            margin-bottom: 10px;
        }

        .product-info {
            display: flex;
            justify-content: space-between;
            color: #666;
            font-size: 14px;
            margin-bottom: 10px;
        }

        .product-actions {
            display: flex;
            justify-content: space-between;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 500;
        }

        .status-active {
            background-color: #E8F5E9;
            color: var(--success-color);
        }

        .status-inactive {
            background-color: #FFEBEE;
            color: var(--danger-color);
        }

        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 30px;
            gap: 5px;
        }

        .pagination a {
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 4px;
            text-decoration: none;
            color: var(--dark-color);
        }

        .pagination a.active {
            background-color: var(--primary-color);
            color: white;
        }

        .pagination a:hover:not(.active) {
            background-color: #f0f0f0;
        }

        .page-item {
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 5px;
            border-radius: 4px;
            cursor: pointer;
        }

        .page-item.active {
            background-color: var(--primary-color);
            color: white;
        }

        .modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0,0,0,0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .modal-content {
            background-color: white;
            width: 500px;
            border-radius: 8px;
            overflow: hidden;
            overflow-y: auto; /* Add scrolling if needed */
        }

        .modal-header {
            background-color: var(--primary-color);
            color: white;
            padding: 10px 15px; /* Reduced padding */
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-title {
            font-size: 18px;
            font-weight: 500;
        }

        .modal-close {
            cursor: pointer;
            font-size: 20px;
        }

        .modal-body {
            padding: 20px; /* Reduced padding */
        }

        .form-group {
            margin-bottom: 15px; /* Reduced margin */
        }

        .form-label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }

        .form-input {
            width: 100%;
            padding: 6px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .form-select {
            width: 100%;
            padding: 6px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .modal-footer {
            padding: 10px 15px;
            display: flex;
            justify-content: flex-end;
            border-top: 1px solid #eee;
        }
    </style>
</head>
<body>
    @{
        Html.RenderPartial("~/Views/Manager/sharedAll.cshtml");
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }
    <div class="container">
        <div class="page-header">
            <h1 class="page-title">Quản lý Sản Phẩm</h1>
        </div>

        <!-- Phần tìm kiếm và lọc -->
        <div class="action-bar new-layout">
            <div class="search-bar">
                <input type="text" class="search-input" placeholder="Tìm kiếm sản phẩm..." 
                       value="@ViewBag.SearchString">
                <button class="btn btn-primary" id="search-btn">Tìm</button>
            </div>
            <div class="buttons">
                <button class="btn btn-success" id="add-product-btn">+ Thêm Sản Phẩm</button>
            </div>
        </div>

        <!-- Danh mục -->
        <div class="category-filter">
            <div class="category-item @(ViewBag.CurrentCategory == "all" ? "active" : "")" 
                 data-category="all">Tất cả</div>
            <div class="category-item @(ViewBag.CurrentCategory == "Cà phê" ? "active" : "")" 
                 data-category="Cà phê">Cà phê</div>
            <div class="category-item @(ViewBag.CurrentCategory == "Trà" ? "active" : "")" 
                 data-category="Trà & Đồ uống">Trà & Đồ uống khác</div>
            <div class="category-item @(ViewBag.CurrentCategory == "Đồ uống đá xay" ? "active" : "")" 
                 data-category="Đồ uống đá xay">Đồ uống đá xay</div>
            <div class="category-item @(ViewBag.CurrentCategory == "Bánh ngọt" ? "active" : "")" 
                 data-category="Bánh ngọt">Bánh ngọt</div>
            <div class="category-item @(ViewBag.CurrentCategory == "Đồ ăn nhẹ" ? "active" : "")" 
                 data-category="Đồ ăn nhẹ">Đồ ăn nhẹ</div>
            <!-- Thêm các danh mục khác -->
        </div>

    
        <!-- Product List -->
        <div class="products-grid">
            @foreach (var product in Model)
            {
                <div class="product-card">
                    <div class="product-image">
                        <img src="@(product.HinhAnh ?? "default.jpg")" alt="@product.TenMon">
                    </div>
                    <div class="product-details">
                        <div class="product-name">@product.TenMon</div>
                            <div class="product-price">@product.GiaSp.ToString("N0").Replace(",", ".") VNĐ</div>
                        <div class="product-info">
                            <span>@product.TenLoai</span>
                            <span class="status-badge @(product.TinhTrang == true ? "status-active" : "status-inactive")">
                                @(product.TinhTrang == true ? "Đang bán" : "Ngừng bán")
                            </span>
                        </div>
                        <div class="product-actions">
                            <button class="btn btn-primary edit-product" data-id="@product.MaMon">Chỉnh sửa</button>
                            <button class="btn btn-danger delete-product" data-id="@product.MaMon">Xóa</button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Phân trang -->
        <div class="pagination">
            @{
                int currentPage = ViewBag.CurrentPage;
                int totalPages = ViewBag.TotalPages;

                // Hiển thị nút trang trước
                if (currentPage > 1)
                {
                    <a href="@Url.Action("SanPham", new { page = currentPage - 1, category = ViewBag.CurrentCategory, search = ViewBag.SearchString })">
                        &lt;
                    </a>
                }

                // Hiển thị các trang gần đó
                int startPage = Math.Max(1, currentPage - 1);
                int endPage = Math.Min(totalPages, currentPage + 1);

                for (int i = startPage; i <= endPage; i++)
                {
                    <a class="@(i == currentPage ? "active" : "")" 
                       href="@Url.Action("SanPham", new { page = i, category = ViewBag.CurrentCategory, search = ViewBag.SearchString })">
                        @i
                    </a>
                }

                // Hiển thị nút trang sau
                if (currentPage < totalPages)
                {
                    <a href="@Url.Action("SanPham", new { page = currentPage + 1, category = ViewBag.CurrentCategory, search = ViewBag.SearchString })">
                        &gt;
                    </a>
                }
            }
        </div>
    </div>
    <div class="modal" id="add-product-modal" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">Thêm Sản Phẩm Mới</div>
                <div class="modal-close">&times;</div>
            </div>
            
            <div class="modal-body">
                @Html.AntiForgeryToken()
            <div class="form-group">
                <label class="form-label">Tên sản phẩm</label>
                <input type="text" class="form-input" id="product-name" placeholder="Nhập tên sản phẩm">
            </div>
            <div class="form-group">
                <label class="form-label">Mã sản phẩm</label>
                <input type="text" class="form-input" id="product-code" placeholder="Nhập mã sản phẩm">
            </div>
            <div class="form-group">
                <label class="form-label">Giá bán (VNĐ)</label>
                <input type="number" class="form-input" id="product-price" placeholder="Nhập giá bán">
            </div>
            <div class="form-group">
                <label class="form-label">Danh mục</label>
                <select class="form-select" id="product-category">
                    <option value="">Chọn danh mục</option>
                    <option value="Cà phê">Cà phê</option>
                    <option value="Trà">Trà</option>
                    <option value="Đồ uống đá xay">Đồ uống đá xay</option>
                    <option value="Bánh ngọt">Bánh ngọt</option>
                    <option value="Đồ ăn nhẹ">Đồ ăn nhẹ</option>
                </select>
            </div>
            <div class="form-group">
                <label class="form-label">Hình ảnh (URL)</label>
                <input type="text" class="form-input" id="product-image" placeholder="Nhập đường dẫn hình ảnh">
            </div>
            <div class="form-group">
                <label class="form-label">Trạng thái</label>
                <select class="form-select" id="product-status">
                    <option value="true">Đang bán</option>
                    <option value="false">Ngừng bán</option>
                </select>
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn" id="cancel-btn">Hủy</button>
            <button class="btn btn-success" id="save-product-btn">Lưu</button>
        </div>
        </div>
    </div>

    <script>
    document.getElementById('add-product-btn').addEventListener('click', function() {
        document.getElementById('add-product-modal').style.display = 'flex';
    });

    document.querySelector('.modal-close').addEventListener('click', function() {
        document.getElementById('add-product-modal').style.display = 'none';
    });

    document.getElementById('cancel-btn').addEventListener('click', function() {
        document.getElementById('add-product-modal').style.display = 'none';
    });

    // Xử lý tìm kiếm
        document.getElementById('search-btn').addEventListener('click', function() {
            const searchValue = document.querySelector('.search-input').value;
            const category = document.querySelector('.category-item.active').dataset.category;
            window.location.href = '@Url.Action("SanPham")' + 
                `?search=${encodeURIComponent(searchValue)}&category=${category}`;
        });

        // Xử lý lọc danh mục
        document.querySelectorAll('.category-item').forEach(item => {
            item.addEventListener('click', function() {
                const category = this.dataset.category;
                const searchValue = document.querySelector('.search-input').value;
                window.location.href = '@Url.Action("SanPham")' + 
                    `?search=${encodeURIComponent(searchValue)}&category=${category}`;
            });
        });

    document.querySelectorAll('.category-item').forEach(item => {
        item.addEventListener('click', function() {
            const category = this.dataset.category;
            const searchValue = document.querySelector('.search-input').value;
            window.location.href = '@Url.Action("SanPham")' + 
                `?search=${encodeURIComponent(searchValue)}&category=${category}`;
        });
    });

    // Add this to your existing script section
document.getElementById('save-product-btn').addEventListener('click', function() {
    // Collect form data
    const productData = {
        MaMon: document.getElementById('product-code').value,
        TenMon: document.getElementById('product-name').value,
        GiaSp: document.getElementById('product-price').value,
        TenLoai: document.getElementById('product-category').value,
        HinhAnh: document.getElementById('product-image').value,
        TinhTrang: document.getElementById('product-status').value === 'true'
    };

    // Send data to server using fetch API
    fetch('@Url.Action("AddProduct", "Manager")', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
        },
        body: JSON.stringify(productData)
    })
    .then(response => response.json())
    .then(data => {
        // Close the modal
        document.getElementById('add-product-modal').style.display = 'none';

        if (data.success) {
            // Show success message
            alert(data.message || 'Thêm sản phẩm thành công');
            // Reload the page to show the new product
            window.location.reload();
        } else {
            // Show error message
            alert(data.message || 'Đã xảy ra lỗi khi thêm sản phẩm');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Đã xảy ra lỗi khi thêm sản phẩm');
    })

    // Close the modal
    document.getElementById('add-product-modal').style.display = 'none';
});
</script>
</body>
</html>