<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CaféManager - Nhân Viên</title>
    <style>
        :root {
            --primary-color: #8D6E63;
            --primary-dark: #6D4C41;
            --primary-light: #D7CCC8;
            --accent-color: #FFCC80;
            --text-color: #212121;
            --text-light: #757575;
            --bg-color: #FFF8E1;
            --card-bg: #FFFFFF;
        }

        body {
            font-family: 'Segoe UI', Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: var(--bg-color);
            color: var(--text-color);
        }

        .content {
            padding: 1rem;
        }

        .page-title {
            font-size: 2rem;
            margin-bottom: 1.5rem;
        }

        .search-container {
            margin-bottom: 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .search-box-container {
            position: relative;
            display: flex;
            width: 300px;
        }

        .search-box {
            padding: 0.5rem 1rem;
            border: 1px solid #ddd;
            border-radius: 20px;
            width: 100%;
            background-color: var(--card-bg);
            padding-right: 40px;
        }

        .search-btn {
            position: absolute;
            right: 5px;
            top: 50%;
            transform: translateY(-50%);
            border: none;
            background: none;
            cursor: pointer;
            color: var(--primary-color);
            font-size: 1.2rem;
            padding: 0;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .search-btn:hover {
                color: var(--primary-dark);
            }

        .btn {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            cursor: pointer;
            display: flex;
            align-items: center;
        }

            .btn:hover {
                background-color: var(--primary-dark);
            }

        .card {
            background-color: var(--card-bg);
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 1rem;
            overflow: hidden;
        }

        .card-header {
            background-color: var(--primary-light);
            padding: 1rem;
            font-weight: bold;
        }

        .table-container {
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 0.75rem 1rem;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        th {
            background-color: var(--primary-light);
            font-weight: 600;
        }

        tr:hover {
            background-color: #f9f9f9;
        }

        .action-btn {
            background: none;
            border: none;
            cursor: pointer;
            color: var(--primary-color);
            margin-right: 0.5rem;
        }

        .action-btn:hover {
            color: var(--primary-dark);
        }

        /* Modal */
        .modal {
            display: none;
            position: fixed;
            z-index: 200;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
            background-color: var(--card-bg);
            margin: 5% auto;
            padding: 20px;
            border-radius: 8px;
            width: 50%;
            max-width: 700px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .modal-title {
            font-size: 1.5rem;
            font-weight: bold;
        }

        .close {
            color: var(--text-light);
            font-size: 1.5rem;
            font-weight: bold;
            cursor: pointer;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        .form-row {
            display: flex;
            gap: 1rem;
        }

        .form-col {
            flex: 1;
        }

        .modal-footer {
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
            margin-top: 1rem;
        }

        .btn-secondary {
            background-color: #9E9E9E;
        }

        .status-active {
            background-color: #81C784;
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            font-size: 0.8rem;
        }

        .status-inactive {
            background-color: #E57373;
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            font-size: 0.8rem;
        }

        /* Pagination */
        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 1rem;
        }

        .pagination-btn {
            padding: 0.5rem 1rem;
            margin: 0 0.25rem;
            border: 1px solid #ddd;
            text-decoration: none;
            color: black;
            background-color: white;
            cursor: pointer;
        }

        .pagination-btn.active {
            background-color: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        .alert {
            padding: 15px;
            margin-bottom: 20px;
            border: 1px solid transparent;
            border-radius: 4px;
        }

        .alert-success {
            color: #3c763d;
            background-color: #dff0d8;
            border-color: #d6e9c6;
        }

        .alert-danger {
            color: #a94442;
            background-color: #f2dede;
            border-color: #ebccd1;
        }
    </style>
</head>
@using pbl3_QLCF.Data;
@model IEnumerable<NguoiDung>
<body>
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }
    @{
        Html.RenderPartial("~/Views/Manager/sharedAll.cshtml");
    }
    <!-- Content -->
    <div class="content">
        <h1 class="page-title">Quản Lý Nhân Viên</h1>

        <div class="search-container">
            <form asp-action="NhanVien" asp-controller="Manager" method="get" class="search-box-container">
                <input type="text" class="search-box" name="search" placeholder="Tìm kiếm nhân viên..." value="@ViewBag.SearchString">
                <button type="submit" class="search-btn">🔍</button>
            </form>
            <form asp-action="ThemNhanVien" asp-controller="Manager" method="get">
                <button type="submit" class="btn">+ Thêm Nhân Viên</button>
            </form>
        </div>

        <div class="card">
            <div class="table-container">
                <table>
                    <thead>
                        <tr>
                            <th>Mã NV</th>
                            <th>Họ Tên</th>
                            <th>Giới Tính</th>
                            <th>SĐT</th>
                            <th>Chức Vụ</th>
                            <th>Ca Làm Việc</th>
                            <th>Trạng Thái</th>
                            <th>Thao Tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var item in Model)
                        {
                            <tr>
                                <td>@item.MaNv</td>
                                <td>@item.HoTen</td>
                                <td>@(item.GioiTinh == true ? "Nam" : "Nữ")</td>
                                <td>@item.Sdt</td>
                                <td>@item.ChucVu</td>
                                <td>@item.CaLamViec</td>
                                <td><span class="status-@(item.TrangThai == "Đang làm việc" ? "active" : "inactive")">@item.TrangThai</span></td>
                                <td>
                                    <button class="action-btn" onclick="editStaff('NV001')">✏️</button>
                                    <button class="action-btn" onclick="confirmDelete('NV001')">🗑️</button>
                                    <button class="action-btn" onclick="viewStaff('NV001')">👁️</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pagination -->
        <div class="pagination">
            @{
                int currentPage = ViewBag.CurrentPage;
                int totalPages = ViewBag.TotalPages;
                if (currentPage > 1)
                {
                    <a href="@Url.Action("NhanVien", new { page = 1, search = ViewBag.SearchString })" class="pagination-btn">&lt;&lt</a>
                }
                if (currentPage > 1)
                {
                    <a href="@Url.Action("NhanVien", new { page = ViewBag.CurrentPage - 1, search = ViewBag.SearchString })" class="pagination-btn">&lt</a>
                }
                int startPage = Math.Max(1, currentPage - 2);
                int endPage = Math.Min(totalPages, currentPage + 2);

                if (endPage - startPage + 1 < 5 && totalPages >= 5)
                {
                    if (currentPage <= 3)
                    {
                        endPage = Math.Min(5, totalPages);
                        startPage = 1;
                    }
                    else
                    {
                        startPage = Math.Max(1, totalPages - 4);
                        endPage = totalPages;
                    }
                }
                for (int i = startPage; i <= endPage; i++)
                {
                    <a href="@Url.Action("NhanVien", new { page = i, search = ViewBag.SearchString })"
                       class="pagination-btn @(ViewBag.CurrentPage == i ? "active" : "")">@i</a>
                }

                if (currentPage < totalPages)
                {
                    <a href="@Url.Action("NhanVien", new { page = currentPage + 1, search = ViewBag.SearchString })" class="pagination-btn">
                        &gt;
                    </a>
                }
                if (currentPage < totalPages)
                {
                    <a href="@Url.Action("NhanVien", new { page = totalPages, search = ViewBag.SearchString})" class="pagination-btn">
                        &gt;&gt;
                    </a>
                }
            }
        </div>
    </div>

    <!-- Add/Edit Staff Modal -->
    <div id="staffModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Thêm Nhân Viên</h2>
                <span class="close" onclick="closeModal()">&times;</span>
            </div>
            <div class="modal-body">
                <form id="staffForm">
                    <div class="form-row">
                        <div class="form-col">
                            <div class="form-group">
                                <label for="maNv">Mã Nhân Viên</label>
                                <input type="text" class="form-control" id="maNv" required>
                            </div>
                        </div>
                        <div class="form-col">
                            <div class="form-group">
                                <label for="hoTen">Họ Tên</label>
                                <input type="text" class="form-control" id="hoTen" required>
                            </div>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-col">
                            <div class="form-group">
                                <label for="ngaySinh">Ngày Sinh</label>
                                <input type="date" class="form-control" id="ngaySinh">
                            </div>
                        </div>
                        <div class="form-col">
                            <div class="form-group">
                                <label for="gioiTinh">Giới Tính</label>
                                <select class="form-control" id="gioiTinh">
                                    <option value="true">Nam</option>
                                    <option value="false">Nữ</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-col">
                            <div class="form-group">
                                <label for="sdt">Số Điện Thoại</label>
                                <input type="text" class="form-control" id="sdt">
                            </div>
                        </div>
                        <div class="form-col">
                            <div class="form-group">
                                <label for="email">Email</label>
                                <input type="email" class="form-control" id="email">
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="diaChi">Địa Chỉ</label>
                        <input type="text" class="form-control" id="diaChi">
                    </div>

                    <div class="form-row">
                        <div class="form-col">
                            <div class="form-group">
                                <label for="chucVu">Chức Vụ</label>
                                <select class="form-control" id="chucVu">
                                    <option value="Quản lý">Quản lý</option>
                                    <option value="Thu ngân">Thu ngân</option>
                                    <option value="Phục vụ">Phục vụ</option>
                                    <option value="Pha chế">Pha chế</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-col">
                            <div class="form-group">
                                <label for="caLamViec">Ca Làm Việc</label>
                                <select class="form-control" id="caLamViec">
                                    <option value="Sáng">Sáng</option>
                                    <option value="Chiều">Chiều</option>
                                    <option value="Tối">Tối</option>
                                    <option value="Cả ngày">Cả ngày</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-col">
                            <div class="form-group">
                                <label for="tenDangNhap">Tên Đăng Nhập</label>
                                <input type="text" class="form-control" id="tenDangNhap">
                            </div>
                        </div>
                        <div class="form-col">
                            <div class="form-group">
                                <label for="matKhau">Mật Khẩu</label>
                                <input type="password" class="form-control" id="matKhau">
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="trangThai">Trạng Thái</label>
                        <select class="form-control" id="trangThai">
                            <option value="Đang làm">Đang làm</option>
                            <option value="Nghỉ việc">Nghỉ việc</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" onclick="closeModal()">Hủy</button>
                <button class="btn" onclick="saveStaff()">Lưu</button>
            </div>
        </div>
    </div>

    <script>
        // Modal functions
        var modal = document.getElementById("staffModal");

        function openModal() {
            modal.style.display = "block";
            document.getElementById("staffForm").reset();
            document.querySelector(".modal-title").textContent = "Thêm Nhân Viên";
        }

        function closeModal() {
            modal.style.display = "none";
        }

        function editStaff(id) {
            // This would fetch staff data from server in a real application
            modal.style.display = "block";
            document.querySelector(".modal-title").textContent = "Chỉnh Sửa Nhân Viên";

            // For demo purposes, fill form with mock data
            if (id === "NV001") {
                document.getElementById("maNv").value = "NV001";
                document.getElementById("hoTen").value = "Nguyễn Văn An";
                document.getElementById("ngaySinh").value = "1990-05-15";
                document.getElementById("gioiTinh").value = "true";
                document.getElementById("sdt").value = "0901234567";
                document.getElementById("email").value = "an.nguyen@example.com";
                document.getElementById("diaChi").value = "123 Đường Lê Lợi, Q.1, TP.HCM";
                document.getElementById("chucVu").value = "Phục vụ";
                document.getElementById("caLamViec").value = "Sáng";
                document.getElementById("tenDangNhap").value = "annv";
                document.getElementById("matKhau").value = "password";
                document.getElementById("trangThai").value = "Đang làm";
            }
        }

        function viewStaff(id) {
            // View staff details - this could open a modal with read-only data
            alert("Xem thông tin chi tiết của nhân viên " + id);
        }

        function confirmDelete(id) {
            if (confirm("Bạn có chắc chắn muốn xóa nhân viên " + id + "?")) {
                // Delete staff - this would send a request to server in a real application
                alert("Đã xóa nhân viên " + id);
            }
        }

        function saveStaff() {
            // Save staff data - this would send form data to server in a real application
            alert("Đã lưu thông tin nhân viên!");
            closeModal();
        }

        // Close the modal if user clicks outside of it
        window.onclick = function(event) {
            if (event.target == modal) {
                closeModal();
            }
        }
    </script>
</body>
</html>